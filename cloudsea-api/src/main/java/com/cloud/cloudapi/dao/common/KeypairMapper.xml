<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloud.cloudapi.dao.common.KeypairMapper">
	<resultMap id="BaseResultMap" type="com.cloud.cloudapi.pojo.openstackapi.forgui.Keypair">
	    <result column="id" property="id" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="fingerprint" property="fingerprint" jdbcType="VARCHAR" />
        <result column="public_key" property="public_key" jdbcType="VARCHAR" />
        <result column="user_id" property="user_id" jdbcType="VARCHAR" />
        <result column="tenant_id" property="tenantId" jdbcType="VARCHAR" />
        <result column="instance_id" property="instanceId" jdbcType="VARCHAR" />
        <result column="private_key" property="private_key" jdbcType="VARCHAR" />
        <result column="million_seconds" property="millionSeconds" jdbcType="BIGINT" />
    </resultMap>
    
    <sql id="all_fields">
        id, name, fingerprint,public_key,user_id,tenant_id,instance_id,private_key,million_seconds
	</sql>
	
	<!-- basic super dao -->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
     select <include refid="all_fields" /> from keypairs where name=#{name}
    </select>
    
    <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String">
     select <include refid="all_fields" /> from keypairs where name=#{name}
    </select>
    
    <select id="selectByInstanceId" resultMap="BaseResultMap" parameterType="java.lang.String">
     select <include refid="all_fields" /> from keypairs where instance_id=#{instanceId}
    </select>
    
    <select id="selectListByInstanceId" resultMap="BaseResultMap" parameterType="java.lang.String">
      select <include refid="all_fields" />
	  from keypairs where instance_id=#{instanceId}
    </select>
    
    <select id="selectListByTenantIds" resultMap="BaseResultMap">
    select <include refid="all_fields" />
	 from keypairs
	 where tenant_id in
      <foreach collection="list" item="id" open="(" close=")" separator=",">
        #{id}
      </foreach>
   </select> 
   
     <update id="insertOrUpdateBatch" parameterType="java.util.List">  
       insert into keypairs (<include refid="all_fields" /> )   
       values  
       <foreach collection="list" item="item" index="index" separator="," >  
         (#{item.id},#{item.name},#{item.fingerprint},#{item.public_key},#{item.user_id},
         #{item.tenantId},#{item.instanceId},#{item.private_key},#{item.millionSeconds})    
       </foreach> ON DUPLICATE KEY UPDATE
       id = VALUES(id), fingerprint = VALUES(fingerprint), public_key=VALUES(public_key), user_id=VALUES(user_id), 
       tenant_id=VALUES(tenant_id), instance_id=VALUES(instance_id), private_key=VALUES(private_key),million_seconds=VALUES(million_seconds)
    </update> 
    
    <insert id="insertSelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.Keypair">
		insert into keypairs ( <include refid="all_fields" /> )
		values (
		#{id}, #{name}, #{fingerprint}, #{public_key}, #{user_id}, #{tenantId},#{instanceId},#{private_key},#{millionSeconds}
		)
	</insert>
	
	<insert id="insertOrUpdate">
       insert into keypairs (<include refid="all_fields" /> )   
       values  
       (#{id}, #{name}, #{fingerprint}, #{public_key}, #{user_id}, #{tenantId},#{instanceId},#{private_key},#{millionSeconds})  
        ON DUPLICATE KEY UPDATE
        id = #{id},fingerprint = #{fingerprint}, public_key = #{public_key},user_id = #{user_id},
        tenant_id = #{tenantId},instance_id = #{instanceId},private_key = #{private_key},million_seconds = #{millionSeconds}
	</insert>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.Keypair">
        update keypairs set id = #{id},fingerprint = #{fingerprint}, public_key = #{public_key},
        user_id = #{user_id},tenant_id = #{tenantId},instance_id = #{instanceId},private_key = #{private_key},million_seconds = #{millionSeconds}
        where name = #{name}
    </update>
    
    <delete id= "deleteByPrimaryKey" parameterType="java.lang.String">
       delete from keypairs where id =#{id}
	</delete>
	
	<!-- self dao -->
    <select id="countNum" resultType="java.lang.Integer">
	  select count(*) as num from keypairs
	</select>
	
	
    <select id="selectList" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from keypairs 
    </select>
    
    <select id="selectAllByTenantId" resultMap="BaseResultMap" parameterType="java.lang.String">
      select <include refid="all_fields" />
	  from keypairs where tenant_id = #{tenantId}  order by million_seconds DESC
    </select>
    
    <select id="selectListWithLimit" resultMap="BaseResultMap" parameterType="java.lang.Integer">
      select <include refid="all_fields" />
	  from keypairs limit #{limit}
    </select>
    
    <select id="selectAllByTenantIdWithLimit" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from keypairs where tenant_id = #{0}  order by million_seconds DESC limit #{1}
    </select>
    
   <select id="selectKeypairsById" resultType="com.cloud.cloudapi.pojo.openstackapi.forgui.Keypair">
      select * from keypairs e where e.id in
      <foreach collection="array" item="id" index="index" open="(" close=")" separator=","> 
        #{id}
      </foreach>
    </select>
    
   <select id="selectKeypairsByName" resultType="com.cloud.cloudapi.pojo.openstackapi.forgui.Keypair">
      select * from keypairs e where e.name in
      <foreach collection="array" item="name" index="index" open="(" close=")" separator=","> 
        #{name}
      </foreach>
    </select>
    
    <select id="countNumByInstanceStatus" resultType="java.lang.Integer" parameterType="java.lang.String">
	  select count(*) as num from keypairs where status =#{status}
	</select>
     
    <select id="selectListForPage" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from keypairs  limit #{0}, #{1}
    </select>    

</mapper>