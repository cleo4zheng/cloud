<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloud.cloudapi.dao.common.VolumeSnapshotMapper">
	<resultMap id="BaseResultMap" type="com.cloud.cloudapi.pojo.openstackapi.forgui.VolumeSnapshot">
	    <result column="id" property="id" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="VARCHAR" />
        <result column="tenant_id" property="tenantId" jdbcType="VARCHAR" />
        <result column="volume_id" property="volumeId" jdbcType="VARCHAR" />
        <result column="size" property="size" jdbcType="INTEGER" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="million_seconds" property="millionSeconds" jdbcType="BIGINT" />
    </resultMap>
    
    <sql id="all_fields">
        id, name, status,tenant_id,volume_id,size,description,million_seconds
	</sql>
	
	<!-- basic super dao -->
	
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
     select <include refid="all_fields" /> from volume_snapshots where id=#{id}
    </select>
    
    <select id="selectByVolumeId" resultMap="BaseResultMap" parameterType="java.lang.String">
     select <include refid="all_fields" /> from volume_snapshots where volume_id=#{volumeId}
    </select>
    
    <select id="selectListByTenantIdAndStatus" resultMap="BaseResultMap">
     select <include refid="all_fields" /> from volume_snapshots where tenant_id=#{0} and status=#{1}
    </select>
    
    <select id="selectListByTenantIdWithLimit" resultMap="BaseResultMap" >
     select <include refid="all_fields" /> from volume_snapshots where tenant_id=#{0} order by million_seconds DESC limit #{1}
    </select>
    
    <select id="selectListByTenantIdAndStatusWithLimit" resultMap="BaseResultMap" >
     select <include refid="all_fields" /> from volume_snapshots where tenant_id=#{0} and status=#{1} order by million_seconds DESC limit #{2}
    </select>
    
    <select id="selectByTenantIdAndName" resultMap="BaseResultMap">
     select <include refid="all_fields" /> from volume_snapshots where tenant_id=#{0} and name=#{1}
    </select>
    
    <insert id="insertSelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.VolumeSnapshot">
		insert into volume_snapshots ( <include refid="all_fields" /> )
		values (
		#{id}, #{name}, #{status}, #{tenantId},#{volumeId},#{size},#{description},#{millionSeconds}
		)
	</insert>

    <insert id="insertOrUpdate">
       insert into volume_snapshots (<include refid="all_fields" /> )   
       values  
       (#{id}, #{name}, #{status}, #{tenantId},#{volumeId},#{size},#{description},#{millionSeconds})  
        ON DUPLICATE KEY UPDATE
        name=#{name},status=#{status},tenant_id=#{tenantId},volume_id=#{volumeId},
        size=#{size},description=#{description},million_seconds=#{millionSeconds}
	</insert>
	
	<update id="insertOrUpdateBatch" parameterType="java.util.List">  
       insert into volume_snapshots (<include refid="all_fields" /> )   
       values  
       <foreach collection="list" item="item" index="index" separator="," >  
        (#{item.id},#{item.name},#{item.status},#{item.tenantId},#{item.volumeId},#{item.size},#{item.description},#{item.millionSeconds})  
       </foreach> ON DUPLICATE KEY UPDATE
       name = VALUES(name), status = VALUES(status),tenant_id = VALUES(tenant_id),volume_id = VALUES(volume_id),size = VALUES(size),description = VALUES(description),million_seconds = VALUES(million_seconds)
    </update> 
    
	<update id="updateByPrimaryKeySelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.VolumeSnapshot">
        update volume_snapshots set name=#{name},status=#{status},tenant_id=#{tenantId},volume_id=#{volumeId},
        size=#{size},million_seconds=#{millionSeconds}
        where id = #{id}
    </update>

    <delete id= "deleteByPrimaryKey" parameterType="java.lang.String">
       delete from volume_snapshots where id =#{id}
	</delete>
	
	<!-- self dao -->
    <select id="countNum" resultType="java.lang.Integer">
	  select count(*) as num from volume_snapshots
	</select>
	
    <select id="selectAll" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from volume_snapshots 
    </select>
    
    <select id="selectAllForPage" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from volume_snapshots  limit #{0}, #{1}
    </select>    

</mapper>