<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloud.cloudapi.dao.common.FirewallMapper">
	<resultMap id="BaseResultMap" type="com.cloud.cloudapi.pojo.openstackapi.forgui.Firewall">
	    <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="tenant_id" property="tenant_id" jdbcType="VARCHAR" />
        <result column="firewall_policy_id" property="firewall_policy_id" jdbcType="VARCHAR" />
        <result column="router_ids" property="routerIds" jdbcType="VARCHAR" />
        <result column="rule_ids" property="ruleIds" jdbcType="VARCHAR" />
        <result column="admin_state_up" property="admin_state_up" jdbcType="BOOLEAN" />
        <result column="status" property="status" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="million_seconds" property="millionSeconds" jdbcType="BIGINT" />
    </resultMap>

    
    <sql id="all_fields">
        id,name,tenant_id,firewall_policy_id,router_ids,rule_ids,admin_state_up,status,description,million_seconds
	</sql>
	
	<!--basic super mapper -->
    
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
     select <include refid="all_fields" /> from firewalls where id=#{id}
    </select>
    
   <select id="selectListByTenantIds" resultMap="BaseResultMap">
    select <include refid="all_fields" />
	 from firewalls
	 where tenant_id in
      <foreach collection="list" item="id" open="(" close=")" separator=",">
        #{id}
      </foreach>
   </select> 
   
    <insert id="insertSelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.Firewall">
		insert into firewalls ( <include refid="all_fields" /> )
		values (
		#{id}, #{name},#{tenant_id}, #{firewall_policy_id},#{routerIds},#{ruleIds},#{admin_state_up},#{status},#{description},#{millionSeconds}
		)
	</insert>
	
	<insert id="insertOrUpdate">
       insert into firewalls (<include refid="all_fields" /> )   
       values  
       (#{id}, #{name},#{tenant_id}, #{firewall_policy_id},#{routerIds},#{ruleIds},#{admin_state_up},#{status},#{description},#{millionSeconds})  
        ON DUPLICATE KEY UPDATE
        name=#{name},tenant_id=#{tenant_id},firewall_policy_id=#{firewall_policy_id},router_ids=#{routerIds},
        rule_ids=#{ruleIds},admin_state_up=#{admin_state_up},status=#{status},description=#{description},million_seconds=#{millionSeconds}
	</insert>
	
	<!-- 
	<insert id="insertOrUpdateBatch" parameterType="java.util.List">  
       insert into firewalls (<include refid="all_fields" /> )   
       values  
       <foreach collection="list" item="item" index="index" separator="," >  
         (#{item.id}, #{item.name},#{item.tenant_id}, #{item.firewall_policy_id},#{item.routerIds},#{item.ruleIds},#{item.admin_state_up},#{item.status},#{item.description},#{item.millionSeconds})    
       </foreach> ON DUPLICATE KEY UPDATE
        name=#{item.name},tenant_id=#{item.tenant_id},firewall_policy_id=#{item.firewall_policy_id},router_ids=#{item.routerIds},
        rule_ids=#{item.ruleIds},admin_state_up=#{item.admin_state_up},status=#{item.status},description=#{item.description},million_seconds=#{item.millionSeconds}
    </insert> 
     -->
     
   	<update id="insertOrUpdateBatch" parameterType="java.util.List">  
       insert into firewalls (<include refid="all_fields" /> )   
       values  
       <foreach collection="list" item="item" index="index" separator="," >  
         (#{item.id}, #{item.name},#{item.tenant_id}, #{item.firewall_policy_id},#{item.routerIds},#{item.ruleIds},#{item.admin_state_up},#{item.status},#{item.description},#{item.millionSeconds})    
       </foreach> ON DUPLICATE KEY UPDATE
        name=VALUES(name),tenant_id=VALUES(tenant_id),firewall_policy_id=VALUES(firewall_policy_id),router_ids=VALUES(router_ids),
        rule_ids=VALUES(rule_ids),admin_state_up=VALUES(admin_state_up),status=VALUES(status),description=VALUES(description),million_seconds=VALUES(million_seconds)
    </update>  
    
	<update id="updateByPrimaryKeySelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.Firewall">
        update firewalls set name=#{name},tenant_id=#{tenant_id},firewall_policy_id=#{firewall_policy_id},router_ids=#{routerIds},
        rule_ids=#{ruleIds},admin_state_up=#{admin_state_up},status=#{status},description=#{description},million_seconds=#{millionSeconds}
        where id = #{id}
    </update>
    
    <delete id= "deleteByPrimaryKey" parameterType="java.lang.String">
       delete from firewalls where id =#{id}
	</delete>
  
    <select id="countNum" resultType="java.lang.Integer">
	  select count(*) as num from firewalls
	</select>
	
   <!-- self dao -->
	<select id="selectAll" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from firewalls 
    </select>
    
    <select id="selectAllByTenantId" resultMap="BaseResultMap" parameterType="java.lang.String">
      select <include refid="all_fields" />
	  from firewalls where tenant_id = #{tenant_id}  order by million_seconds DESC
    </select>
    
   	<select id="selectListWithLimit" resultMap="BaseResultMap" parameterType="java.lang.Integer">
      select <include refid="all_fields" />
	  from firewalls limit #{limit} 
    </select>
     
    <select id="selectAllByTenantIdWithLimit" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from firewalls where tenant_id = #{0} order by million_seconds DESC limit #{1}
    </select>
    
    <select id="selectByIds" resultMap="BaseResultMap">
      select <include refid="all_fields" /> from firewalls e where e.id in
      <foreach collection="array" item="id" index="index" open="(" close=")" separator=","> 
        #{id}
      </foreach>
    </select>
    
    <select id="selectAllForPage" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from firewalls  limit #{0}, #{1}
    </select>  
 
</mapper>