<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloud.cloudapi.dao.common.MonitorMapper">
	<resultMap id="BaseResultMap" type="com.cloud.cloudapi.pojo.openstackapi.forgui.Monitor">
        <result column="id" property="id" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="VARCHAR" />
        <result column="enable" property="enable" jdbcType="TINYINT" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="tenant_id" property="tenantId" jdbcType="VARCHAR" />
         <result column="million_seconds" property="millionSeconds" jdbcType="BIGINT" />
    </resultMap>

    <sql id="all_fields">
        id, name, status, type, enable, description, tenant_id, million_seconds
	</sql>
	
	<select id="selectAllList" resultMap="BaseResultMap">
     select <include refid="all_fields" />
	 from monitors 
    </select>
    
    <select id="selectListByTenantId" resultMap="BaseResultMap">
     select <include refid="all_fields" />
	 from monitors
	 where tenant_id = #{tenant_id}
    </select>
    
    <select id="selectListForPage" resultMap="BaseResultMap">
     select <include refid="all_fields" />
	 from monitors
	 where 
	     tenant_id is not null
	    <if test="null != tenant_id and '' != tenant_id">
	       and tenant_id = #{tenant_id}
	    </if>	    
		<if test="null != paramMap and null != paramMap.get('name') and '' != paramMap('name')">  
           and name=#{paramMap.get('name')},  
        </if>
       <if test="null != paramMap  and null != paramMap.get('status') and '' != paramMap('status')">  
           and status=#{paramMap.get('status')},  
        </if>
        <if test="null != paramMap and null != paramMap.get('type') and '' != paramMap('type')">  
           and type=#{paramMap.get('type')},  
        </if>
        
		<if test="null != paramMap and null != paramMap.get('limit') and '' != paramMap('limit')">  
		  limit #{limit}
	    </if>
		ORDER BY million_seconds DESC 
    </select>
    
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
       select <include refid="all_fields" /> from monitors where id=#{id}
    </select>
    
    <insert id="insertSelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.Monitor">
		insert into monitors ( <include refid="all_fields" /> )
		values (
		  #{id}, #{name}, #{status}, #{type}, #{enable}, #{description}, #{tenantId}, #{millionSeconds}
		)
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.Monitor">
        update monitors set name = #{name}, status = #{status}, type=#{type}, enable=#{enable}, description=#{description}, tenant_id = #{tenantId}, million_seconds=#{millionSeconds}
        where id = #{id}
    </update>
    
    <update id="updateNameAndDescrition" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.Monitor">
        update monitors 
        set 
         <if test="null != name and '' != name">
          name = #{name}
         </if>
         <if test="null != name and '' != name and null != description and '' != description">
          ,
         </if>
         <if test="null != description and '' != description">
          description = #{description}
         </if>
        where id = #{id}
    </update>
    
    <delete id= "deleteByPrimaryKey" parameterType="java.lang.String">
       delete from monitors where id =#{id}
	</delete>
</mapper>