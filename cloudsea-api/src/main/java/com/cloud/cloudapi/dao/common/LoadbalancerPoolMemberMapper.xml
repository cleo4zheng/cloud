<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloud.cloudapi.dao.common.LoadbalancerPoolMemberMapper">

	<resultMap id="BaseResultMap" type="com.cloud.cloudapi.pojo.openstackapi.forgui.LBPoolMember">
	    <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <result column="protocol_port" property="protocol_port" jdbcType="INTEGER" />
        <result column="subnet_id" property="subnet_id" jdbcType="VARCHAR" />
        <result column="tenant_id" property="tenant_id" jdbcType="VARCHAR" />
        <result column="weight" property="weight" jdbcType="INTEGER" />
        <result column="pool_id" property="pool_id" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="VARCHAR" />
        <result column="status_description" property="status_description" jdbcType="VARCHAR" />
        <result column="instance_id" property="instanceId" jdbcType="VARCHAR" />
    </resultMap>

    
    <sql id="all_fields">
        id,address,protocol_port,subnet_id,tenant_id,weight,pool_id,status,status_description,instance_id
	</sql>
	
	<!--basic super mapper -->
    
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
     select <include refid="all_fields" /> from loadbalancer_pool_members where id=#{id}
    </select>
    
    <insert id="insertSelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.LBPoolMember">
		insert into loadbalancer_pool_members ( <include refid="all_fields" /> )
		values (
		#{id}, #{address},#{protocol_port},#{subnet_id},#{tenant_id},#{weight},#{pool_id},#{status},#{status_description},#{instanceId}
		)
	</insert>
	
    <insert id="insertOrUpdate">
       insert into loadbalancer_pool_members (<include refid="all_fields" /> )   
       values  
       (#{id}, #{address},#{protocol_port}, #{subnet_id},#{tenant_id},#{weight},#{pool_id},#{status},#{status_description},#{instanceId})  
        ON DUPLICATE KEY UPDATE
        address=#{address},protocol_port=#{protocol_port},subnet_id=#{subnet_id},tenant_id=#{tenant_id},
        weight=#{weight},pool_id=#{pool_id},status=#{status},status_description=#{status_description},instance_id=#{instanceId}
	</insert>
    
    <!-- 
   	<insert id="insertOrUpdateBatch" parameterType="java.util.List">  
       insert into loadbalancer_pool_members (<include refid="all_fields" /> )   
       values  
       <foreach collection="list" item="item" index="index" separator="," >  
         (#{item.id}, #{item.address},#{item.protocol_port}, #{item.subnet_id},#{item.tenant_id},#{item.weight},#{item.pool_id},#{item.status},#{item.status_description})    
       </foreach> ON DUPLICATE KEY UPDATE
       address=#{item.address},protocol_port=#{item.protocol_port},subnet_id=#{item.subnet_id},tenant_id=#{item.tenant_id},
       weight=#{item.weight},pool_id=#{item.pool_id},status=#{item.status},status_description=#{item.status_description}
    </insert> 
    -->
   
    <update id="insertOrUpdateBatch" parameterType="java.util.List">  
       insert into loadbalancer_pool_members (<include refid="all_fields" /> )   
       values  
       <foreach collection="list" item="item" index="index" separator="," >  
         (#{item.id}, #{item.address},#{item.protocol_port}, #{item.subnet_id},#{item.tenant_id},#{item.weight},#{item.pool_id},#{item.status},#{item.status_description},#{item.instanceId})    
       </foreach> ON DUPLICATE KEY UPDATE
       address=VALUES(address),protocol_port=VALUES(protocol_port),subnet_id=VALUES(subnet_id),tenant_id=VALUES(tenant_id),
       weight=VALUES(weight),pool_id=VALUES(pool_id),status=VALUES(status),status_description=VALUES(status_description),instance_id=VALUES(instance_id)
    </update> 
       		
   <select id="selectPoolMembersByPoolId" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from loadbalancer_pool_members where pool_id = #{pool_id}
    </select>
    
	<update id="updateByPrimaryKeySelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.LBPoolMember">
        update loadbalancer_pool_members set address=#{address},protocol_port=#{protocol_port},subnet_id=#{subnet_id},tenant_id=#{tenant_id},
        weight=#{weight},pool_id=#{pool_id},status=#{status},status_description=#{status_description},instanceId=#{instance_id}
        where id = #{id}
    </update>
    
    <delete id= "deleteByPrimaryKey" parameterType="java.lang.String">
       delete from loadbalancer_pool_members where id =#{id}
	</delete>
  
   <!-- self dao -->
	<select id="selectAll" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from loadbalancer_pool_members 
    </select>
    
   	<select id="selectListWithLimit" resultMap="BaseResultMap" parameterType="java.lang.Integer">
      select <include refid="all_fields" />
	  from loadbalancer_pool_members limit #{limit} 
    </select>
     
    <select id="selectAllForPage" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from loadbalancer_pool_members limit #{0}, #{1}
    </select>  
 
</mapper>