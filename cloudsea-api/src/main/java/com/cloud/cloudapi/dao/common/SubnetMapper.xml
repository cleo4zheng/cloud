<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloud.cloudapi.dao.common.SubnetMapper">
	<resultMap id="BaseResultMap" type="com.cloud.cloudapi.pojo.openstackapi.forgui.Subnet">
        <result column="id" property="id" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="segment" property="segment" jdbcType="VARCHAR" />
        <result column="ip_version" property="ipVersion" jdbcType="VARCHAR" />
        <result column="gateway" property="gateway" jdbcType="VARCHAR" />
        <result column="cidr" property="cidr" jdbcType="VARCHAR" />
        <result column="network_id" property="network_id" jdbcType="VARCHAR" />   
        <result column="tenant_id" property="tenant_id" jdbcType="VARCHAR" />       
        <result column="million_seconds" property="millionSeconds" jdbcType="BIGINT" />
    </resultMap>

    <sql id="all_fields">
        id,name, segment, ip_version, gateway, cidr, network_id, tenant_id,million_seconds
	</sql>
	
	<!--basic super mapper -->
    
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
     select <include refid="all_fields" /> from subnets where id=#{id}
    </select>
    
   <select id="selectListByTenantIds" resultMap="BaseResultMap">
    select <include refid="all_fields" />
	 from subnets
	 where tenant_id in
      <foreach collection="list" item="id" open="(" close=")" separator=",">
        #{id}
      </foreach>
   </select> 
   
    <insert id="insertSelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.Subnet">
		insert into subnets ( <include refid="all_fields" /> )
		values (
		  #{id}, #{name}, #{segment}, #{ipVersion}, #{gateway}, #{cidr}, #{network_id},#{tenant_id}, #{millionSeconds}
		)
	</insert>
	
    <insert id="insertOrUpdate">
       insert into subnets (<include refid="all_fields" /> )   
       values  
       (#{id}, #{name}, #{segment}, #{ipVersion}, #{gateway}, #{cidr}, #{network_id},#{tenant_id}, #{millionSeconds})  
        ON DUPLICATE KEY UPDATE
        name = #{name}, segment = #{segment}, ip_version=#{ipVersion}, gateway=#{gateway}, 
        cidr=#{cidr}, network_id=#{network_id}, tenant_id=#{tenant_id},million_seconds=#{millionSeconds}
	</insert>
		
   <insert id="insertSubnetsBatch" parameterType="java.util.List">  
       insert into subnets (<include refid="all_fields" /> )   
       values  
       <foreach collection="list" item="item" index="index" separator="," >  
        (#{item.id},#{item.name},#{item.segment},#{item.ipVersion},#{item.gateway},#{item.cidr},#{item.network_id},#{item.tenant_id},#{item.millionSeconds})  
       </foreach>  
    </insert> 
    
    <!-- 
    <insert id="insertOrUpdateBatch" parameterType="java.util.List">  
       insert into subnets (<include refid="all_fields" /> )   
       values  
       <foreach collection="list" item="item" index="index" separator="," >  
         (#{item.id},#{item.name},#{item.segment},#{item.ipVersion},#{item.gateway},#{item.cidr},#{item.network_id},#{item.tenant_id},#{item.millionSeconds})    
       </foreach> ON DUPLICATE KEY UPDATE
       name = #{item.name}, segment = #{item.segment}, ip_version=#{item.ipVersion}, gateway=#{item.gateway}, 
        cidr=#{item.cidr}, network_id=#{item.network_id}, tenant_id=#{item.tenant_id},million_seconds=#{item.millionSeconds}
    </insert> 
     -->
     <select id="countNum" resultType="java.lang.Integer">
	  select count(*) as num from subnets
	</select>
	
    <update id="insertOrUpdateBatch" parameterType="java.util.List">  
       insert into subnets (<include refid="all_fields" /> )   
       values  
       <foreach collection="list" item="item" index="index" separator="," >  
         (#{item.id},#{item.name},#{item.segment},#{item.ipVersion},#{item.gateway},#{item.cidr},#{item.network_id},#{item.tenant_id},#{item.millionSeconds})    
       </foreach> ON DUPLICATE KEY UPDATE
       name = VALUES(name), segment = VALUES(segment), ip_version=VALUES(ip_version), gateway=VALUES(gateway), 
       cidr=VALUES(cidr), network_id=VALUES(network_id), tenant_id=VALUES(tenant_id),million_seconds=VALUES(million_seconds)
    </update> 
    
	<insert id="insertTenantsSubnets" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.Subnet">
		insert into tenants_subnets ("tenant_id", "subnet_id")
		values (#{tenant_id}, #{id})
	</insert>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.Subnet">
        update subnets set name = #{name}, segment = #{segment}, ip_version=#{ipVersion}, gateway=#{gateway}, 
        cidr=#{cidr}, network_id=#{network_id}, tenant_id=#{tenant_id},million_seconds=#{millionSeconds}
        where id = #{id}
    </update>
    
    <delete id= "deleteByPrimaryKey" parameterType="java.lang.String">
       delete from subnets where id = #{id}
	</delete>
	
	<delete id= "deleteTenantsSubnets" parameterType="java.lang.String">
       delete from tenants_subnets where subnet_id = #{subnet_id}
	</delete>
	
    <select id="selectAllList" resultMap="BaseResultMap">
     select <include refid="all_fields" />
	 from subnets 
    </select>
    
    <select id="selectListByTenantId" resultMap="BaseResultMap" parameterType="java.lang.String">
     select <include refid="all_fields" />
	 from subnets where tenant_id = #{tenand_id} order by million_seconds DESC
    </select>
    
    <select id="selectListByTenantIdWithLimit" resultMap="BaseResultMap">
     select <include refid="all_fields" />
	 from subnets where tenant_id = #{0} order by million_seconds DESC limit #{1}
    </select>
    
    <select id="selectListByNetworkId" resultMap="BaseResultMap" parameterType="java.lang.String">
     select <include refid="all_fields" />
	 from subnets
	 where network_id = #{network_id}
    </select>
    
    <select id="selectListBySubnetIds" resultMap="BaseResultMap">
     select <include refid="all_fields" />
	 from subnets
	 where id in
       <foreach collection="list" item="id" open="(" close=")" separator=",">
         #{id}
       </foreach>
    </select>
</mapper>