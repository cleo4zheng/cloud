<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloud.cloudapi.dao.common.SyncResourceMapper">
	<resultMap id="BaseResultMap" type="com.cloud.cloudapi.pojo.openstackapi.forgui.SyncResource">
	    <result column="id" property="id" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="VARCHAR" />
        <result column="org_status" property="orgStatus" jdbcType="VARCHAR" />
        <result column="expected_status" property="expectedStatus" jdbcType="VARCHAR" />
        <result column="sync_status" property="syncStatus" jdbcType="VARCHAR" />
        <result column="related_resource" property="relatedResource" jdbcType="VARCHAR" />
        <result column="region" property="region" jdbcType="VARCHAR" />
    </resultMap>
    
    <sql id="all_fields">
        id,type,org_status,expected_status,sync_status,related_resource,region
	</sql>
	
	<!-- basic super dao -->
	
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
     select <include refid="all_fields" /> from sync_resources where id=#{id}
    </select>
    
    <insert id="insertSelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.SyncResource">
		insert into sync_resources ( <include refid="all_fields" /> )
		values (
		#{id},#{type},#{orgStatus},#{expectedStatus},#{syncStatus},#{relatedResource},#{region}
		)
	</insert>
	
	<insert id="insertOrUpdate">
       insert into sync_resources (<include refid="all_fields" /> )   
       values  
       (#{id}, #{type}, #{orgStatus},#{expectedStatus}, #{syncStatus},#{relatedResource},#{region})  
        ON DUPLICATE KEY UPDATE
        type=#{type},org_status=#{orgStatus},expected_status=#{expectedStatus},sync_status=#{syncStatus},related_resource=#{relatedResource},region=#{region}
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.SyncResource">
        update sync_resources set type = #{type},org_status=#{orgStatus},expected_status = #{expectedStatus},sync_status = #{syncStatus},related_resource=#{relatedResource},region=#{region}
        where id = #{id}
    </update>
    
    <delete id= "deleteByPrimaryKey" parameterType="java.lang.String">
       delete from sync_resources where id =#{id}
	</delete>
	
	<!-- self dao -->
    <select id="countNum" resultType="java.lang.Integer">
	  select count(*) as num from sync_resources
	</select>
		
    <select id="selectAll" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from sync_resources 
    </select>
    
    <select id="selectAllForPage" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from sync_resources limit #{0}, #{1}
    </select>    

</mapper>