<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloud.cloudapi.dao.common.DatabaseMapper">
	<resultMap id="BaseResultMap" type="com.cloud.cloudapi.pojo.openstackapi.forgui.Database">
	    <result column="id" property="id" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="collate" property="collate" jdbcType="VARCHAR" />
        <result column="instanceId" property="instanceId" jdbcType="VARCHAR" />
        <result column="character_set" property="character_set" jdbcType="VARCHAR" />
    </resultMap>
    
    <sql id="all_fields">
        id, name, `collate`, instanceId, character_set
	</sql>
	
	<!-- basic super dao -->
	
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
     select <include refid="all_fields" /> from dbs where id=#{id}
    </select>
    
    <select id="selectByIds" resultMap="BaseResultMap">
      select <include refid="all_fields" /> from dbs e where e.id in
      <foreach collection="array" item="id" index="index" open="(" close=")" separator=","> 
        #{id}
      </foreach>
    </select>
    
    <insert id="insertSelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.Database">
		insert into dbs ( <include refid="all_fields" /> )
		values (
		#{id}, #{name}, #{collate},#{instanceId}, #{character_set}
		)
	</insert>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.Database">
        update dbs set name = #{name}, collate = #{collate},instanceId = #{instanceId},character_set = #{character_set}
        where id = #{id}
    </update>
    
    <delete id= "deleteByPrimaryKey" parameterType="java.lang.String">
       delete from dbs where id =#{id}
	</delete>
	
	<delete id= "deleteByInstanceId" parameterType="java.lang.String">
       delete from dbs where instanceId =#{instanceId}
	</delete>
	
	<!-- self dao -->
    <select id="countNum" resultType="java.lang.Integer">
	  select count(*) as num from dbs
	</select>
	
    <select id="selectAll" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from dbs 
    </select>
    
    
    <select id="selectListWithLimit" resultMap="BaseResultMap" parameterType="java.lang.Integer">
      select <include refid="all_fields" />
	  from dbs limit #{limit}
    </select>
     
    <select id="selectListForPage" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from dbs  limit #{0}, #{1}
    </select>
    
    <select id="selectByinstanceId" resultMap="BaseResultMap">
      select <include refid="all_fields" /> from dbs  where instanceId =#{instanceId}
    </select>
    
    <insert id="insertOrUpdate">
       insert into dbs (<include refid="all_fields" /> )   
       values  
       (#{id}, #{name}, #{collate},#{instanceId}, #{character_set})  
        ON DUPLICATE KEY UPDATE
       name =#{name}, `collate` =#{collate}, instanceId =#{instanceId}, character_set =#{character_set}
	</insert>  
	
	<update id="insertOrUpdateBatch" parameterType="java.util.List">  
       insert into dbs (<include refid="all_fields" /> )   
       values  
       <foreach collection="list" item="item" index="index" separator="," > 
         (#{item.id}, #{item.name}, #{item.collate},#{item.instanceId},#{item.character_set})    
       </foreach> ON DUPLICATE KEY UPDATE
       name = VALUES(name), `collate` = VALUES(`collate`), instanceId = VALUES(instanceId), character_set = VALUES(character_set)
    </update> 
    
    

</mapper>