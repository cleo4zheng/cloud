<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloud.cloudapi.dao.common.SecurityGroupMapper">
	<resultMap id="BaseResultMap" type="com.cloud.cloudapi.pojo.openstackapi.forgui.SecurityGroup">
        <result column="id" property="id" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="tenant_id" property="tenantId" jdbcType="VARCHAR" />
        <result column="security_group_rule_id" property="securityGroupRuleIds" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />   
        <result column="million_seconds" property="millionSeconds" jdbcType="BIGINT" />
    </resultMap>

    <sql id="all_fields">
        id,name, tenant_id,security_group_rule_id,description,million_seconds
	</sql>
	
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
     select <include refid="all_fields" /> from securitygroups where id=#{id}
    </select>
    
    <insert id="insertSelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.SecurityGroup">
		insert into securitygroups ( <include refid="all_fields" /> )
		values (
		#{id}, #{name}, #{tenantId},#{securityGroupRuleIds},#{description},#{millionSeconds}
		)
	</insert>
	
	<insert id="insertOrUpdate">
       insert into securitygroups (<include refid="all_fields" /> )   
       values  
       (#{id}, #{name}, #{tenantId},#{securityGroupRuleIds},#{description},#{millionSeconds})  
        ON DUPLICATE KEY UPDATE
        name = #{name},tenant_id = #{tenantId},security_group_rule_id = #{securityGroupRuleIds}, description = #{description},million_seconds = #{millionSeconds}
	</insert>
	
	<!-- 
     <insert id="insertOrUpdateBatch" parameterType="java.util.List">  
       insert into securitygroups (<include refid="all_fields" /> )   
       values  
       <foreach collection="list" item="item" index="index" separator="," >  
         (#{item.id}, #{item.name}, #{item.tenantId},#{item.securityGroupRuleIds},#{item.description},#{item.millionSeconds})    
       </foreach> ON DUPLICATE KEY UPDATE
       name = #{item.name},tenant_id = #{item.tenantId},security_group_rule_id = #{item.securityGroupRuleIds}, description = #{item.description},million_seconds = #{item.millionSeconds}
    </insert> 
     -->
     
   <update id="insertOrUpdateBatch" parameterType="java.util.List">  
       insert into securitygroups (<include refid="all_fields" /> )   
       values  
       <foreach collection="list" item="item" index="index" separator="," >  
         (#{item.id}, #{item.name}, #{item.tenantId},#{item.securityGroupRuleIds},#{item.description},#{item.millionSeconds})    
       </foreach> ON DUPLICATE KEY UPDATE
       name = VALUES(name),tenant_id = VALUES(tenant_id),security_group_rule_id = VALUES(security_group_rule_id), 
       description = VALUES(description),million_seconds = VALUES(million_seconds)
    </update> 
    
	<update id="updateByPrimaryKeySelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.SecurityGroup">
        update securitygroups set name = #{name},tenant_id = #{tenantId},security_group_rule_id = #{securityGroupRuleIds}, description = #{description},million_seconds = #{millionSeconds}
        where id = #{id}
    </update>
    
    <delete id= "deleteByPrimaryKey" parameterType="java.lang.String">
       delete from securitygroups where id =#{id}
	</delete>
	
	<!-- self dao -->
    <select id="countNum" resultType="java.lang.Integer">
	  select count(*) as num from securitygroups
	</select>
	
    <select id="selectTenantDefaultSecurityGroup" resultMap="BaseResultMap" parameterType="java.lang.String">
      select <include refid="all_fields" />
	  from securitygroups where tenant_id=#{tenantId} and name="default"
    </select>
    
    <select id="selectTenantSecurityGroupByName" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from securitygroups where name = #{0} and tenant_id=#{1}
    </select>
    
	<select id="selectListWithLimit" resultMap="BaseResultMap" parameterType="java.lang.Integer">
      select <include refid="all_fields" />
	  from securitygroups limit #{limit}
    </select>
    
    <select id="selectAllByTenantIdWithLimit" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from securitygroups where tenant_id = #{0} order by million_seconds DESC limit #{1}
    </select>
    
    <select id="selectAllList" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from securitygroups 
    </select>
    
       
   <select id="selectListByTenantIds" resultMap="BaseResultMap">
    select <include refid="all_fields" />
	 from securitygroups
	 where tenant_id in
      <foreach collection="list" item="id" open="(" close=")" separator=",">
        #{id}
      </foreach>
   </select> 
   
    <select id="selectSecurityGroupsById" resultMap="BaseResultMap">
      select * from securitygroups e where e.id in
      <foreach collection="array" item="id" index="index" open="(" close=")" separator=","> 
        #{id}
      </foreach>
    </select>
    
    <select id="selectSecurityGroupsByName" resultMap="BaseResultMap">
     select <include refid="all_fields" />
	 from securitygroups
	 where name in
       <foreach collection="list" item="name" open="(" close=")" separator=",">
         #{name}
       </foreach>
    </select>
    
    <select id="selectAllByTenantId" resultMap="BaseResultMap" parameterType="java.lang.String">
      select <include refid="all_fields" />
	  from securitygroups where tenant_id = #{tenantId} order by million_seconds DESC 
    </select>
    
    <select id="selectListForPage" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from securitygroups  limit #{0}, #{1}
    </select>    
      
</mapper>