<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloud.cloudapi.dao.common.PhysNodeMapper">
	<resultMap id="BaseResultMap" type="com.cloud.cloudapi.pojo.openstackapi.forgui.PhysNode">
	    <result column="id" property="id" jdbcType="VARCHAR" />
	    <result column="name" property="name" jdbcType="VARCHAR" />
	    <result column="instance_uuid" property="instance_uuid" jdbcType="VARCHAR" />
	    <result column="driver" property="driver" jdbcType="VARCHAR" />
	    <result column="power_state" property="power_state" jdbcType="VARCHAR" />
	    <result column="target_power_state" property="target_power_state" jdbcType="VARCHAR" />
	    <result column="provision_state" property="provision_state" jdbcType="VARCHAR" />
	    <result column="target_provision_state" property="target_provision_state" jdbcType="VARCHAR" />
	    <result column="driver_info" property="driver_info_str" jdbcType="VARCHAR" />
	    <result column="maintenance" property="maintenance" jdbcType="VARCHAR" />
	    <result column="properties" property="properties" jdbcType="VARCHAR" />
	    <result column="million_seconds" property="millionSeconds" jdbcType="BIGINT" />
    </resultMap>
    
    <sql id="all_fields">
        id,name,instance_uuid,driver,power_state,target_power_state,provision_state,target_provision_state,
        driver_info,maintenance,properties,million_seconds
	</sql>
	
	<!-- basic super dao -->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
     select <include refid="all_fields" /> from physnodes where id=#{id}
    </select>
      
    <insert id="insertSelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.PhysNode">
		insert into physnodes ( <include refid="all_fields" /> )
		values (#{id}, #{name}, #{instance_uuid}, #{driver}, #{power_state}, #{target_power_state},#{provision_state},
		#{target_provision_state},#{driver_info_str},#{maintenance},#{properties},#{million_seconds})
	</insert>
	
   <insert id="insertOrUpdate">
       insert into physnodes (<include refid="all_fields" /> )
       values  
       (#{id}, #{name}, #{instance_uuid}, #{driver}, #{power_state}, #{target_power_state}, 
       #{provision_state}, #{target_provision_state}, #{driver_info_str}, #{maintenance}, #{properties},#{million_seconds})
        ON DUPLICATE KEY UPDATE
        name = #{name}, instance_uuid = #{instance_uuid}, driver = #{driver}, power_state = #{power_state}, target_power_state = #{target_power_state},provision_state = #{provision_state},
        target_provision_state = #{target_provision_state}, driver_info_str = #{driver_info_str}, maintenance = #{maintenance}, properties = #{properties}, million_seconds = #{million_seconds}}
	</insert>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.cloud.cloudapi.pojo.openstackapi.forgui.PhysNode">
        update physnodes set name = #{name}, instance_uuid = #{instance_uuid}, driver = #{driver}, power_state = #{power_state}, target_power_state = #{target_power_state},
        provision_state = #{provision_state}, target_provision_state = #{target_provision_state}, driver_info_str = #{driver_info_str}, maintenance = #{maintenance}, properties = #{properties},
        million_seconds = #{million_seconds}
        where id = #{id}
    </update>
    
    <select id="selectList" resultMap="BaseResultMap">
      select <include refid="all_fields" />
	  from physnodes 
    </select>
    
    <delete id= "deleteByPrimaryKey" parameterType="java.lang.String">
       delete from physnodes where id =#{id}
	</delete>
	
    <select id="selectListWithLimit" resultMap="BaseResultMap" parameterType="java.lang.Integer">
      select <include refid="all_fields" />
	  from physnodes order by million_seconds DESC limit #{limit}
    </select>
	
</mapper>